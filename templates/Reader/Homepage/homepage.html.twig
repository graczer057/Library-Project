{% extends 'Reader/readerBase.html.twig' %}

{% block body %}
    {% for message in app.flashes('success') %}
        <div class="alert alert-success">
            {{ message }}
        </div>
    {% endfor %}

    {% for message in app.flashes('error') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}

    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5">
            <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">

                {% set index = 0 %}
                {% for book in books %}
                    <div class="col mb-5">
                        <div class="card h-100">
                            <!-- Product image-->
                            <img class="card-img-top" {% if book.cover == null %} src="https://dummyimage.com/450x300/dee2e6/6c757d.jpg" {% else %} src="{{ asset('uploads/covers/'~book.cover~'') }}" {% endif %}
                                 alt="..."/>
                            <!-- Product details-->
                            <div class="card-body p-4">
                                <div class="text-center">
                                    <!-- Product name-->
                                    <h5 class="fw-bolder">{{ book.name }}</h5>
                                    <!-- Product price-->
                                    <p><strong>{{ book.author }}</strong></p>
                                    <p>{{ book.description }}</p>
                                </div>
                            </div>
                            <!-- Product actions-->
                            <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                                {% set reservationStatus = false %}
                                {% for reservation in reservations %}
                                    {% if reservation.bookId.id == book.id %}
                                        {% set reservationStatus = true %}
                                    {% endif %}

                                {% endfor %}

                                {% set value = false %}
                                {% set rentDate = false %}
                                {# {% for rent in rentInfo %}
                                        {% if rent.bookId.id == book.id %}
                                            {% set value = true %}
                                            {% set rentDate = rent.expireDate|date('H:i d-m-Y') %}
                                        {% endif %}
                                    {% endfor %} #}

                                {% if value == true %}
                                    <div class="text-center"><a class="btn btn-success mt-auto">Książka została
                                            wypożyczona</a>
                                        <p>Ostateczna data oddania książki: <strong>{{ rentDate }}</strong></p>
                                    </div>
                                {% elseif (book.quantity <= 0 or reader.reservationsQuantity == 0) and reservationStatus == false %}
                                    <div class="text-center"><a class="btn btn-danger mt-auto" style="visibility: visible;" data-book="{{ book.id|serialize(format = 'json') }}">Nie można
                                            zarezerwować</a>
                                        <p>Liczba egzemplarzy: <strong>{{ book.quantity }}</strong></p>
                                    </div>
                                {% elseif reservationStatus == true %}
                                    <div class="text-center">
                                        <button class="btn btn-outline-danger mt-auto" id="btn_cancel"
                                                style="visibility: visible;" data-book="{{ book.id|serialize(format = 'json') }}">Anuluj rezerwację
                                        </button>
                                        <button class="btn btn-outline-info mt-auto" id="btn_create"
                                                style="visibility: hidden;" data-book="{{ book.id|serialize(format = 'json') }}">Zarezerwuj
                                        </button>
                                        <a id="cannotReserve" class="btn btn-danger mt-auto"
                                           style="visibility: hidden;" data-book="{{ book.id|serialize(format = 'json') }}">Nie można zarezerwować</a>
                                        <p>Liczba egzemplarzy: <strong>{{ book.quantity }}</strong></p>
                                    </div>
                                {% else %}
                                    <div class="text-center">
                                        <button class="btn btn-outline-info mt-auto" id="btn_create"
                                                style="visibility: visible;" data-book="{{ book.id|serialize(format = 'json') }}">Zarezerwuj
                                        </button>
                                        <button class="btn btn-outline-danger mt-auto" id="btn_cancel"
                                                style="visibility: hidden;" data-book="{{ book.id|serialize(format = 'json') }}">Anuluj rezerwację
                                        </button>
                                        <a id="cannotReserve" class="btn btn-danger mt-auto"
                                           style="visibility: hidden;" data-book="{{ book.id|serialize(format = 'json') }}">Nie można zarezerwować</a>
                                        <p>Liczba egzemplarzy: <strong>{{ book.quantity }}</strong></p>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    {% set index = index + 1 %}
                {% endfor %}
            </div>
        </div>
    </section>

{% endblock %}
{% block javascripts %}
    <script>
        let count = {{ quantity }};

        let cancel = document.getElementsByClassName("btn btn-outline-danger mt-auto");
        let create = document.getElementsByClassName("btn btn-outline-info mt-auto");
        let noMore = document.getElementsByClassName("btn btn-danger mt-auto");

        let newId = [];

        for (let i = 0; i < cancel.length; i++) {
            let cancelId = JSON.parse(cancel[i].dataset.book);
            let urlCancel = "{{ path('readerCancelReservation', {'bookId': 'index'}) }}"
            urlCancel = urlCancel.replace("index", cancelId);

            $(cancel[i]).on('click', function (event) {
                $.ajax({
                    url: urlCancel,
                    /*type: "delete",
                    method: "delete",*/
                    success: function (responseData) {
                        $(cancel[i]).css("visibility", "hidden")
                        $(create[i]).css("visibility", "visible")
                        count++
                        if(count > 0 && count < 4){

                        }
                    }
                })
            })
        }

        for (let i = 0; i < create.length; i++) {
            let createId = JSON.parse(create[i].dataset.book);
            let urlCreate = "{{ path('readerCreateReservation', {'bookId': 'index'}) }}"
            urlCreate = urlCreate.replace("index", createId);

            $(create[i]).on('click', function (event) {
                $.ajax({
                    url: urlCreate,
                    type: "post",
                    method: "post",
                    success: function (responseData) {
                        $(cancel[i]).css("visibility", "visible")
                        $(create[i]).css("visibility", "hidden")
                        count--
                        newId.push(i);
                        if (count === 0) {
                            showBlockade();
                        }
                    }
                })
            })
        }

        function showBlockade()
        {
            let i = 0;
            let j = 0;
            let sthNew = [];

            /*for(let i = 0; i < noMore.length; i++){
                for(let j = 0; j < newId.length; j++){
                    if(i !== newId[j]){
                        sthNew.push(i);
                    }
                }
            }

            alert(sthNew);*/

            do {
                for(let k = 0; k < noMore.length; k++){
                    if(k !== newId[i]){
                        break;
                    }
                    sthNew.push(k)
                }
                if(j !== newId.length){
                    j++;
                }
                i++;
            } while(i < newId.length);

            alert(sthNew)

            for(let i = 0; i < sthNew.length; i++){
                $(noMore[sthNew[i]]).css("visibility", "visible")
                $(create[sthNew[i]]).css("visibility", "hidden")
                $(cancel[sthNew[i]]).css("visibility", "hidden")
            }
        }
    </script>
{% endblock %}